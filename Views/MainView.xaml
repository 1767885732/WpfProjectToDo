<Window x:Class="WpfProjectToDo.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfProjectToDo"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:ext="clr-namespace:WpfProjectToDo.Extensions"
        xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        Style="{StaticResource MaterialDesignWindow}"
        Background="{DynamicResource MaterialDesignPaper}"
        WindowStartupLocation="CenterScreen"
        Title="MainWindow" Height="768" Width="1280">

    <materialDesign:DialogHost DialogTheme="Inherit" x:Name="DialogHost"
                           Identifier="Root" >

        <materialDesign:DrawerHost x:Name="drawerHost" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <StackPanel DockPanel.Dock="Top" Margin="0,20">
                        <Image Source="/Images/avatar.webp" Width="50" Height="50">
                            <Image.Clip>
                                <EllipseGeometry Center="25,25" RadiusX="25" RadiusY="25"/>
                            </Image.Clip>
                        </Image>
                        <TextBlock Text="{Binding UserName}" Margin="0,10" HorizontalAlignment="Center"/>
                    </StackPanel>
                    
                    <ListBox x:Name="MenuBar" ItemsSource="{Binding MenuBars}" ItemContainerStyle="{StaticResource MyListBoxItemStyle}">
                        <behavior:Interaction.Triggers>
                            <behavior:EventTrigger EventName="SelectionChanged">
                                <behavior:InvokeCommandAction Command="{Binding NavigateCommand}" 
                                         CommandParameter="{Binding Path=SelectedItem, 
                                                                   RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                            </behavior:EventTrigger>
                        </behavior:Interaction.Triggers>
                        
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="{Binding Icon}" Margin="15,0"/>
                                    <TextBlock Text="{Binding Title}" Margin="10,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <materialDesign:Snackbar Name="Snackbar" Panel.ZIndex="1" MessageQueue="{materialDesign:MessageQueue}"/>
                <materialDesign:ColorZone Padding="16"
                materialDesign:ElevationAssist.Elevation="Dp4"
                DockPanel.Dock="Top"
                x:Name="ColorZone"
                Mode="PrimaryMid">
                    <DockPanel LastChildFill="True">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton x:Name="MenuToggleButton"
          AutomationProperties.Name="HamburgerToggleButton"             
          IsChecked="False"
          Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <Button Margin="24,0,0,0"
    materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"
    Command="{Binding GoBackCommand}"
    Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                      Size=24}"
    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
    Style="{StaticResource MaterialDesignToolButton}"
    ToolTip="Previous Item" />

                            <Button Margin="16,0,0,0"
    materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"
    Command="{Binding GoForwardCommand}"
    Content="{materialDesign:PackIcon Kind=ArrowRight,
                                      Size=24}"
    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
    Style="{StaticResource MaterialDesignToolButton}"
    ToolTip="Next Item" />

                            <TextBlock Margin="16,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AutomationProperties.Name="Material Design In XAML Toolkit"
                                FontSize="22"
                                Text="笔记本 " />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <materialDesign:PopupBox>
                                <materialDesign:PopupBox.ToggleContent>
                                    <Image Source="/Images/avatar.webp" Width="25" Height="25">
                                        <Image.Clip>
                                            <EllipseGeometry Center="12.5,12.5" RadiusX="12.5" RadiusY="12.5"/>
                                        </Image.Clip>
                                    </Image>
                                </materialDesign:PopupBox.ToggleContent>

                                <StackPanel>
                                    <!--<Button Command="{Binding AppCenterCommand}" Content="个人中心"/>-->
                                    <Button Command="{Binding LoginOutCommand}" Content="退出当前账号"/>
                                </StackPanel>
                            </materialDesign:PopupBox>
                            <Button x:Name="btnMin" Content="-" Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                            <Button x:Name="btnMax" Content="□" Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                            <Button x:Name="btnClose" Content="×" Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                        </StackPanel>
                       
                    </DockPanel>
                </materialDesign:ColorZone>

                <ContentControl Grid.Row="1" prism:RegionManager.RegionName="{x:Static ext:PrismManager.MainViewRegionName}"/>

            </Grid> 
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
